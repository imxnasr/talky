// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String    @id @default(cuid())
  username     String    @unique
  name         String
  email        String    @unique
  password     String?
  role         UserRole  @default(USER)
  avatar       String?
  active       Boolean   @default(true)
  messages     Message[] @relation("Send")
  seenMessages Message[] @relation("Seen")
  chats        Chat[]    @relation("Members")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Chat {
  id        String    @id @default(cuid())
  name      String?
  isGroup   Boolean   @default(false)
  users     User[]    @relation("Members")
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id        String   @id @default(cuid())
  body      String?
  image     String?
  chatId    String
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  senderId  String
  sender    User     @relation("Send", fields: [senderId], references: [id], onDelete: Cascade)
  seenBy    User[]   @relation("Seen")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
}
